@{
    ViewData["Title"] = "Home Page";
}

@section Styles{
    <link href="~/lib/fullcalendar/lib/main.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
}


<div id="calendar"></div>


@section Scripts{
    <script src="~/lib/fullcalendar/lib/main.js"></script>
    <script src="~/lib/fullcalendar/lib/locales/tr.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                themeSystem: 'bootstrap',
                bootstrapFontAwesome: {
                    dayGridMonth: 'calendar',
                    prev: 'fa-angle-double-left',
                    next: 'fa-angle-double-right',
                    listWeek: 'fa-list',
                },
                initialView: 'dayGridMonth',
                locale: 'tr',
                headerToolbar: {
                    left: 'prev next today addEvent',
                    center: 'title',
                    right: 'dayGridMonth timeGridWeek timeGridDay listWeek'
                    //listDay, listWeek,listMonth,listYear
                },
                footerToolbar: {
                    left: 'prevYear',
                    right: 'nextYear'
                },
                scrollTime: 'timeGridHour',
                //minTime:'08:00:00',
                //maxTime:'20:00:00',
                slotDuration: '00:30:00',//Zaman çizelgesi saat dilimi aralığı
                slotLabelInterval: '00:15:00',
                slotLabelFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                },
                fixedWeekCount: false,//Ay görünümünde hafta sayısını 6'ya sabitleme. false sabitlemez
                showNonCurrentDates: true,//Sadece bulunulan ayın günleri görünen ay takvimi. false bir önceki ayın gönlerini göstermez
                contentHeight: 550,
                //aspectRatio:2, // En boy oranı
                allDaySlot: false,//haftalık/gülük görünümlerdeki tüm gün olan eventlar için ayrılmış slotu kapama.
                // firstDay:1,// Pazardan başlayacak şekilde 0.1.2...
                titleFormat: {
                    year: 'numeric',
                    month: 'long',
                    //day: '2-digit',
                },
                //titleRangeSeparator: ' /',


                //Alternatif bul. Gün isimlerinin tam yazılması amaç
                /*columnHeaderFormat: {
                    //month: 'numeric',
                    weekday: 'long',
                    //day: 'numeric',

                },*/
                /*views: { //İsteğe göre belirenen gün sayısına göre filtreleme seçeneği. Burada tercihen 4 günlük
                    timeGridForFourDay: {
                        type: 'timeGrid',
                        //dayCount: 4,
                        duration: {
                            days: 4
                        },
                        buttonText: '4Gün'
                    }
                },*/
                /* buttonText: {
                    today:'Bugün ve Bugün',
                    month: 'Ay ve Ay',
                    week: 'Hafta ve Hafta',
                    day:'Gün ve Gün',
                },*/
                customButtons: {
                    addEvent: {
                        text: 'Ekle',
                        click: function () {
                            var newEvent = {
                                id: 'a',
                                title: 'New Event',
                                start: '2021-09-10T15:00:00.00Z',
                                end: '2021-09-10T17:30:00.00Z',
                            }
                            calendar.addEvent(newEvent);
                        }
                    }
                },
                // eventColor: 'teal',//Eventlerin çerçeve ve background renkleri
                eventBackgroundColor: 'teal',
                eventBorderColor: 'teal',
                eventTextColor: 'white',
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    //second: '',
                    //omitZeroMinute: '',//Tam sayılarda 00 olanları göster-gösterme
                    //meridiem:'',//am-pm, 'narrow'--> p,a
                },
                //displayEventTime: true,//Event kutucukları üzerinde saat göster-gösterme
                //displayEventEnd:true,//Event bitiş saati göster-gösterme
                //eventOrder:'title',//start, duration, allDay, title,[],function()--> eventlerin çizelge üzerinde çakışanların görünme yöntemi, sıralanması
                timeZone: 'UTC',//Her tarayıcıda etkinlik saat diliminin aynı olması. default olarak local gelir
                events: [
                    {
                        id: 'x',
                        title: 'Toplantı',
                        start: '2021-09-09T08:00:00.00Z',
                        end: '2021-09-09T10:30:00.00Z',
                    },

                    {
                        id: 'y',
                        title: 'Proje Teslimi',
                        start: '2021-09-09T09:00:00.00Z',
                        end: '2021-09-09T12:00:00.00Z',
                    },

                    {
                        id: 'z',
                        title: 'Toplantı',
                        start: '2021-09-11T09:30:00.00Z',
                        end: '2021-09-11T11:00:00.00Z',
                    },
                ],
                eventRender: function (info) {

                },
                selectable: true,//Takvim üzerinde seçimleri aktif et
                select: function (selectionInfo) {//Seçimler doğrultusunda çalışacak fonksiyonlar
                    console.log(selectionInfo);
                },
                eventClick: function (info) {//Eventler üzerinde tıklandığındaki işlemler
                    alert(info.event.title);
                },
                //eventMouseEnter: function (onMouse) {//mouse event üzerine geldiğinde yapılacak işlemler
                //    alert(onMouse.event.start);
                //},
                //eventMouseLeave: function (onLeave) {// mouse event üzerini terkettiği zaman yapılacak işlemler
                //    alert(onLeave.event.id);
                //},
                editable: true,//takvim üzerinde event güncellenebilirliği
                //eventStartEditable: true,//event başlangıç zamanı düzenlenebilirliği, çizelge üzerinde kaydırılabilirliği
                //eventDurationEditable:true,//evetlerin resize özelliği
                eventDragMinDistance: 100,//event resize animasyonu
                dragRevertDuration: 1500,//event hatalı srükleme/güncelleme yapıldığında (örn takvim dışına), geri yerine oturma anim süresi
                dragScroll: true,// event sürükleme/güncelleme sırasında zaman çizelgesinde scroll özelliği otomatikleşmesi
                snapDuration: '00:15:00',//event sürüklemesinde/güncelleme kaydırma zaman dilimi aralığı. default slotDuration özelliğine eşit yani  30 dk
                //eventOverlap: function (stillEvent, movingEvent) {//event kaydırmada/güncellemede uygulanacak kurallar (örn başka event ile çakışamaz)
                //    return stillEvent.allDay && movingEvenet.allDay;//eventler tam gün değillerse çakışmasına izin verme
                //},
                //eventConstraint: {// Event sürüklemede/güncellemede izin verilecek kurallar
                //    startTime: '10:00',
                //    endTime: '19:00',
                //    daysOfWeek:[1,2,3],//Haftanın 1.2. ve 3. günlerinde izin ver
                //},
                //eventllow: function (dropInfoEvent,draggedEvent) {//sürüklenen veya dışarıdan bırakılan eventin özellilkleri
                //    console.log(fropInfoEvent.start);
                //    return false;
                //}
            });
            calendar.render();
            /////////Event çekme
            var events = calendar.getEvents();
            console.log(events);
            //////////id'ye göre event çekme
            var id = 'x';
            var eventCek = calendar.getEventById(id);
            console.log(eventCek);
            ////////event paramlarını çekme
            var id = 'x';
            var eventCek = calendar.getEventById(id);
            console.log(eventCek.title);
            ////////event render etme
            //calendar.renderEvents();

        });
    </script>
}